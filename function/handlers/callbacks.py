import os
import json
import logging

from aiogram import types
from dispatcher import dp, bot

from function.games import mafia
from function.games import blackjack
from function.games import crocodile
from function.player import referal
from function.chat import settings
from function import admin
from classes import GetDataFromChat

config = open(os.getcwd() + "/config.json", encoding="UTF-8")
data = json.loads(config.read())
config.close()

@dp.callback_query_handler(lambda callback_query: True)
async def some_callback_handler(callback_query: types.CallbackQuery):
    try:
        code = callback_query.data
        if code == "–ö–æ–º–∞–Ω–¥—ã":
            
            caption = '*‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ—Å–µ–¥—ã:*\n'
            caption += "_/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏_\n"
            caption += "\n*üî´ –ò–≥—Ä—ã –¥–ª—è –±–µ—Å–µ–¥:*\n"
            caption += "_/association - –ò–≥—Ä–∞ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏_\n"
            caption += "_/blackjack - –ò–≥—Ä–∞ –ë–ª—ç–∫-–î–∂–µ–∫_\n"
            caption += "_/crocodile - –ò–≥—Ä–∞ –ö—Ä–æ–∫–æ–¥–∏–ª_\n"
            caption += "_/double - –ò–≥—Ä–∞ –î–∞–±–ª_\n"
            caption += "_/mafia - –ò–≥—Ä–∞ –ú–∞—Ñ–∏—è_\n"
            caption += "\n*üìå –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            caption += "_/profile - –õ–∏—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_\n"
            caption += "_/transfer - –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤_\n"
            caption += "_/referal - –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞_\n"
            caption += "_/startgame - –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã_\n"

            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption)

        elif code == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å":
            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=bot.id):
                return 

            caption = data["emojio"] + " –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–∞–≤–∞ –±—ã–ª–∏ –≤—ã–¥–∞–Ω—ã\n–ú–æ–∂–µ–º –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –∏–≥—Ä–∞–º)"
            chat = GetDataFromChat.export_data_from_chat(chat=callback_query.message.chat.id)
            chat["working"] = True
            GetDataFromChat.import_data_from_chat(chat=callback_query.message.chat.id, data=chat)
            
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption)

        elif code == "–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ":
            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=callback_query.from_user.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=bot.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            chat = GetDataFromChat.export_data_from_chat(chat=callback_query.message.chat.id)
            if chat["pin_user"]:
                chat["pin_user"] = False
            else:
                chat["pin_user"] = True

            caption = data["emojio"] + f" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã: {callback_query.message.chat.full_name}\n\n"
            caption += f'–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {( "–í—ã–∫–ª—é—á–µ–Ω–æ ‚ùå" , "–í–∫–ª—é—á–µ–Ω–æ ‚úî" )[ chat["pin_user"] ]}'

            buttons  = [types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)

            GetDataFromChat.import_data_from_chat(chat=callback_query.message.chat.id, data=chat)
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        elif code == "–ê–Ω—Ç–∏-–ö–ê–ü–°":
            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=callback_query.from_user.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=bot.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            chat = GetDataFromChat.export_data_from_chat(chat=callback_query.message.chat.id)
            if chat["anti_capslock"]:
                chat["anti_capslock"] = False
            else:
                chat["anti_capslock"] = True

            caption = data["emojio"] + f" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã: {callback_query.message.chat.full_name}\n\n"
            caption += f'–ê–Ω—Ç–∏-–ö–ê–ü–°: {( "–í—ã–∫–ª—é—á–µ–Ω–æ ‚ùå" , "–í–∫–ª—é—á–µ–Ω–æ ‚úî" )[ chat["anti_capslock"] ]}'

            buttons  = [types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            GetDataFromChat.import_data_from_chat(chat=callback_query.message.chat.id, data=chat)
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        elif code == "–ê–Ω—Ç–∏ URL":
            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=callback_query.from_user.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=bot.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            chat = GetDataFromChat.export_data_from_chat(chat=callback_query.message.chat.id)
            if chat["anti_url"]:
                chat["anti_url"] = False
            else:
                chat["anti_url"] = True

            caption = data["emojio"] + f" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ—Å–µ–¥—ã: {callback_query.message.chat.full_name}\n\n"
            caption += f'–ê–Ω—Ç–∏ URL: {( "–í—ã–∫–ª—é—á–µ–Ω–æ ‚ùå" , "–í–∫–ª—é—á–µ–Ω–æ ‚úî" )[ chat["anti_url"] ]}'

            buttons  = [types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="–ù–∞—Å—Ç—Ä–æ–π–∫–∏")] 
            keyboard = types.InlineKeyboardMarkup(row_width=1)
            keyboard.add(*buttons)
            GetDataFromChat.import_data_from_chat(chat=callback_query.message.chat.id, data=chat)
            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        elif code == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏":

            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=callback_query.from_user.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)

            if not await admin.is_admin_group(chat_id=callback_query.message.chat.id, user_id=bot.id):
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤..", show_alert=True)


            caption, keyboard = settings.get_settings(chat_id=callback_query.message.chat.id,full_name=callback_query.message.chat.full_name)

            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        elif code == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å":
            return await crocodile.keyboard_wait(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, user_id=callback_query.from_user.id)

        elif code == "–†–µ—Ñ–µ—Ä–∞–ª—ã":
            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            return await referal.get_user_referals(from_user=callback_query.from_user.id, chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)
        
        elif code == "–°—Å—ã–ª–∫–∞":

            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            caption = data["emojio"] + f' *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞*\n–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ [—Ç—É—Ç](https://t.me/{data["name"]}?start={callback_query.from_user.id})'

            buttons = [types.InlineKeyboardButton(text='–†–µ—Ñ–µ—Ä–∞–ª—ã', callback_data="–†–µ—Ñ–µ—Ä–∞–ª—ã"), types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data="–ù–∞–∑–∞–¥")]
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*buttons)

            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        elif code == "–ù–∞–∑–∞–¥":

            if not callback_query.message.reply_to_message:
                return await bot.delete_message(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id)

            if callback_query.from_user.id != callback_query.message.reply_to_message.from_user.id:
                return await bot.answer_callback_query(callback_query_id=callback_query.id, text=data["emojio"] + " –ö–Ω–æ–ø–∫–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–∞–Ω–∞ –Ω–µ –¥–ª—è –≤–∞—Å..", show_alert=True)

            caption, keyboard = referal.get_message_referal(callback_query.from_user.id)

            return await bot.edit_message_text(chat_id=callback_query.message.chat.id, message_id=callback_query.message.message_id, text=caption, reply_markup=keyboard)

        code_splited = code.split("_")
        if code_splited[0] == "get" or code_splited[0] == "skip":
            action, chat_id, hashed = code_splited[0], code_splited[1], code_splited[2]
            return await blackjack.buttons_blackjack(
                from_id=callback_query.from_user.id, 
                message_id=callback_query.message.message_id, 
                action=action, 
                chat_id=chat_id, 
                hash=hashed
            )

        chat_id, user, value, day, hash = code.split("_")
        await mafia.choise_user(
            from_id=callback_query.from_user.id,
            message_id=callback_query.message.message_id, 
            chat_id=chat_id, 
            user_choise=int(user), 
            value=value, 
            day=int(day), 
            hash=int(hash)
        )
    except Exception as e:
        logging.error(e, exc_info=True)
